-- Create the database
CREATE DATABASE IF NOT EXISTS fetch_data;
USE fetch_data;

-- Create the Users table
CREATE TABLE IF NOT EXISTS Users (
    ID VARCHAR(255) PRIMARY KEY,
    CREATED_DATE datetime,
    BIRTH_DATE datetime,
    STATE VARCHAR(255),
    LANGUAGE VARCHAR(255),
    GENDER VARCHAR(255)
);

-- Create the Products table
CREATE TABLE IF NOT EXISTS Products (
    CATEGORY_1 VARCHAR(255),
    CATEGORY_2 VARCHAR(255),
    CATEGORY_3 VARCHAR(255),
    MANUFACTURER VARCHAR(255),
    BRAND VARCHAR(255),
    BARCODE BIGINT
);

-- Create the Transactions table
CREATE TABLE IF NOT EXISTS Transactions (
    RECEIPT_ID VARCHAR(255),
    PURCHASE_DATE datetime,
    SCAN_DATE datetime,
    STORE_NAME VARCHAR(255),
    USER_ID VARCHAR(255),
    BARCODE BIGINT,
    FINAL_QUANTITY DECIMAL(10, 2),
    FINAL_SALE DECIMAL(10, 2)
);

-- Top 5 Brands by Receipts Scanned Among Users 21 and Over
WITH Eligible_Users AS (
    SELECT ID
    FROM users
    WHERE TIMESTAMPDIFF(YEAR, BIRTH_DATE, CURDATE()) >= 21
),
Receipts_Count AS (
    SELECT 
        p.BRAND, 
        COUNT(DISTINCT t.RECEIPT_ID) AS Receipt_Count
    FROM transactions t
    JOIN products p ON t.BARCODE = p.BARCODE
    WHERE t.USER_ID IN (SELECT ID FROM Eligible_Users)
    GROUP BY p.BRAND
)
SELECT BRAND, Receipt_Count
FROM Receipts_Count
ORDER BY Receipt_Count DESC
LIMIT 5;

-- Top 5 Brands by Sales Among Users That Have Had Their Account for At Least Six Months
WITH Eligible_Users AS (
    SELECT ID
    FROM users
    WHERE CREATED_DATE <= DATE_SUB(CURDATE(), INTERVAL 6 MONTH)
),
Brand_Sales AS (
    SELECT 
        p.BRAND, 
        SUM(t.FINAL_SALE) AS Total_Sales
    FROM transactions t
    JOIN products p ON t.BARCODE = p.BARCODE
    WHERE t.USER_ID IN (SELECT ID FROM Eligible_Users)
    GROUP BY p.BRAND
)
SELECT BRAND, Total_Sales
FROM Brand_Sales
ORDER BY Total_Sales DESC
LIMIT 5;

-- Who are Fetchâ€™s Power Users?
SELECT 
    u.ID AS User_ID,
    COUNT(DISTINCT t.RECEIPT_ID) AS Total_Receipts,
    SUM(t.FINAL_SALE) AS Total_Sales
FROM transactions t
JOIN users u ON t.USER_ID = u.ID
GROUP BY u.ID
ORDER BY Total_Sales DESC, Total_Receipts DESC;	

-- Which is the Leading Brand in the Dips & Salsa Category?
SELECT 
    p.BRAND, 
    SUM(t.FINAL_SALE) AS Total_Sales
FROM transactions t
JOIN products p ON t.BARCODE = p.BARCODE
WHERE p.CATEGORY_2 = 'Dips & Salsa'
GROUP BY p.BRAND
ORDER BY Total_Sales DESC
LIMIT 1;
